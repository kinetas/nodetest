version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: gogi0529!
      MYSQL_DATABASE: mission

  nodetest:
    build: ./nodetest
    container_name: nodetest
    restart: always
    ports:
      - "3000:3000"
      - "3001:3001"
    depends_on:
      - mysql
    env_file:
      - ./nodetest/.env

  rag_server:
    build: ./rag_server
    container_name: rag_server
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - chroma
      - ollama
    volumes:
      - ./chroma-data:/chroma/chroma

  chroma:
    image: chromadb/chroma:0.5.0
    container_name: chroma
    ports:
      - "8001:8000"
    volumes:
      - ./chroma-data:/chroma/chroma
    environment:
    - IS_PERSISTENT=TRUE
    - ALLOW_RESET=TRUE
  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    
  webRTC_server:
    image: webrtc-server
    build: ./webRTC_server  # FastAPI 기반 WebRTC 시그널링 서버
    container_name: webRTC_server
    restart: always
    ports:
      - "8500:8500"  # WebRTC 서버 포트 매핑
    depends_on:
      - turnserver
    volumes:
      - ./docker/webRTC_server/SECRETE:/app/cert  # 인증서 파일 경로를 마운트
  turnserver:
    image: coturn/coturn
    container_name: turnserver
    restart: always
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "5349:5349/tcp"  # TLS 지원
    volumes:
      - ./turnserver/turnserver.conf:/etc/turnserver.conf
volumes:
  mysql-data:
  chroma-data:
  ollama_data: